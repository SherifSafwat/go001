openapi: 3.0.0
info:
  title: Product API
  version: 1.0.0

paths:
  /products:
    get:
      summary: Get a list of products
      description: Returns a paginated list of products
      operationId: getProducts
      parameters:
        - name: page
          in: query
          description: How many items to return at one time (max 100)
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            default: 1
        - name: limit
          in: query
          description: Offset for pagination
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            default: 5
      responses:
        '200':
          description: List of products
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductListResponse'

    post:
      summary: Create a new product
      description: Creates a new product
      operationId: createProduct
      requestBody:
        description: Product data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '201':
          description: Product created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'

  /products/{id}:
    get:
      summary: Get a product by ID
      description: Returns a product by ID
      operationId: getProductById
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Product ID
      responses:
        '200':
          description: Product details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Product not found

    put:
      summary: Update a product
      description: Updates a product
      operationId: updateProduct
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Product ID
      requestBody:
        description: Product data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '200':
          description: Product updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'

    delete:
      summary: Delete a product
      description: Deletes a product
      operationId: deleteProduct
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Product ID
      responses:
        '204':
          description: Product deleted

components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        name:
          type: string
          example: Laptop Pro X
        description:
          type: string
          example: High performance laptop with 16GB RAM and 512GB SSD.
        price:
          type: number
          format: double
          example: 1200.50
        category:
          type: string
          example: Electronics
      required:
        - id
        - name
        - price
        - category
    
    Pagination:
      type: object
      properties:
        page:
          type: integer
          example: 2
        limit:
          type: integer
          example: 20
        total_pages:
          type: integer
          example: 10
        total_items:
          type: integer
          example: 200
      required:
        - page
        - limit
        - total_pages
        - total_items

    ProductListResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Product'
        pagination:
          $ref: '#/components/schemas/Pagination'
      required:
        - data
        - pagination        
    
    Error:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
      required:
        - code
        - message